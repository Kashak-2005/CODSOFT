import tkinter as tk
from tkinter import messagebox
import random
import string

def evaluate_strength(password):
    length = len(password)
    if length < 6:
        return "Weak", "red"
    if (any(c.islower() for c in password) and
        any(c.isupper() for c in password) and
        any(c.isdigit() for c in password) and
        any(c in string.punctuation for c in password)):
        return "Strong", "green"
    return "Moderate", "orange"

def generate_password():
    try:
        length = int(length_entry.get())
        if length <= 0:
            raise ValueError

        characters = ""
        if var_lower.get(): characters += string.ascii_lowercase
        if var_upper.get(): characters += string.ascii_uppercase
        if var_digits.get(): characters += string.digits
        if var_special.get(): characters += string.punctuation

        if not characters:
            messagebox.showwarning("Warning", "Select at least one character type!")
            return

        password = ''.join(random.choice(characters) for _ in range(length))
        password_entry.delete(0, tk.END)
        password_entry.insert(0, password)

        strength, color = evaluate_strength(password)
        strength_label.config(text=f"Strength: {strength}", fg=color)

    except ValueError:
        messagebox.showerror("Invalid Input", "Please enter a valid number for length.")

def copy_to_clipboard():
    pwd = password_entry.get()
    if pwd:
        root.clipboard_clear()
        root.clipboard_append(pwd)
        messagebox.showinfo("Copied", "Password copied to clipboard!")

root = tk.Tk()
root.title("🔐 Stylish Password Generator")
root.geometry("750x420")
root.config(bg="#E3F2FD")

tk.Label(root, text="🔐 Password Generator", font=("Helvetica", 22, "bold"),
         bg="#E3F2FD", fg="#0D47A1").pack(pady=15)

main_frame = tk.Frame(root, bg="white", bd=3, relief="ridge", padx=20, pady=20)
main_frame.pack(padx=30, pady=10, fill="both", expand=True)

left_frame = tk.Frame(main_frame, bg="#FAFAFA")
left_frame.grid(row=0, column=0, sticky="n", padx=20, pady=10)

tk.Label(left_frame, text="🔧 Settings", font=("Arial", 14, "bold"), bg="#FAFAFA", fg="#0D47A1").pack(anchor="w", pady=(0, 10))

tk.Label(left_frame, text="Password Length:", font=("Arial", 12), bg="#FAFAFA").pack(anchor="w")
length_entry = tk.Entry(left_frame, font=("Arial", 12), width=12, bd=2, relief="solid")
length_entry.pack(anchor="w", pady=5)

var_lower = tk.BooleanVar(value=True)
var_upper = tk.BooleanVar(value=True)
var_digits = tk.BooleanVar(value=True)
var_special = tk.BooleanVar(value=True)

tk.Checkbutton(left_frame, text="Lowercase (a-z)", variable=var_lower, bg="#FAFAFA", font=("Arial", 11)).pack(anchor="w")
tk.Checkbutton(left_frame, text="Uppercase (A-Z)", variable=var_upper, bg="#FAFAFA", font=("Arial", 11)).pack(anchor="w")
tk.Checkbutton(left_frame, text="Digits (0-9)", variable=var_digits, bg="#FAFAFA", font=("Arial", 11)).pack(anchor="w")
tk.Checkbutton(left_frame, text="Special (!@#$)", variable=var_special, bg="#FAFAFA", font=("Arial", 11)).pack(anchor="w")

right_frame = tk.Frame(main_frame, bg="#FAFAFA")
right_frame.grid(row=0, column=1, sticky="n", padx=20, pady=10)

tk.Label(right_frame, text="📄 Output", font=("Arial", 14, "bold"), bg="#FAFAFA", fg="#0D47A1").pack(anchor="w", pady=(0, 10))

tk.Button(right_frame, text="🎲 Generate Password", command=generate_password,
          bg="#2196F3", fg="white", font=("Arial", 12, "bold"), relief="flat", padx=10, pady=5).pack(anchor="w", pady=10)

tk.Label(right_frame, text="Generated Password:", font=("Arial", 12), bg="#FAFAFA").pack(anchor="w")
password_entry = tk.Entry(right_frame, font=("Courier", 12), width=35, bd=2, relief="solid")
password_entry.pack(anchor="w", pady=5)

tk.Button(right_frame, text="📋 Copy to Clipboard", command=copy_to_clipboard,
          bg="#4CAF50", fg="white", font=("Arial", 12, "bold"), relief="flat", padx=10, pady=5).pack(anchor="w", pady=10)

strength_label = tk.Label(right_frame, text="", bg="#FAFAFA", font=("Arial", 11, "bold"))
strength_label.pack(anchor="w", pady=5)

root.mainloop()













